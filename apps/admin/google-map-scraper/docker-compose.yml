# Docker Compose file version. '3.8' is a stable and widely used version.
version: '3.8'

# Define the services (containers) that make up our application.
# In our case, we only have one service: our scraper API.
services:
  # The name of our service. We'll call it 'scraper-api'.
  scraper-api:
    # --- Build Configuration ---
    # Tells Docker Compose to build the image from the Dockerfile in the current directory ('.').
    build: .
    # Name the image that will be built. This makes it easier to find and manage.
    image: gmap-scraper-api:latest
    
    # --- Port Mapping ---
    # Maps port 3000 on the host machine to port 3000 inside the container.
    # This is what allows you to access the API via http://localhost:3000 from your browser or curl.
    ports:
      - "3000:3000"
      
    # --- Volume Mapping ---
    # This is a crucial step for data persistence.
    # It maps the './data' directory on your host machine to the '/usr/src/app/data' directory inside the container.
    # Why is this important? By default, any files created inside a container are lost when the container is removed.
    # This mapping ensures that the JSON and CSV files generated by the scraper are saved directly to your project
    # directory on your computer, so you won't lose your scraped data.
    volumes:
      - ./data:/usr/src/app/data
      
    # --- Restart Policy ---
    # Tells Docker to restart the container automatically if it crashes.
    # 'unless-stopped' means it will restart unless you manually stop it.
    restart: unless-stopped
    
    # --- Container Naming ---
    # Gives the container a predictable name, which is helpful for management.
    container_name: gmap-scraper-api-container
